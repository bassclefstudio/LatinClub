@page "/"
@using ViewModels
@inject IBlazorViewProvider ViewProvider

<div class="flex-container flex-vertical full-width full-height background scrollable-mobile">
    <div class="flex-container flex-horizontal flex-center text-center accent full-width">
        <h1>RHS Latin Club</h1>
        <i> v@(ViewModel.AppVersion.ToString())</i>
    </div>
    <div class="flex-container flex-horizontal flex-center mobile full-width full-height">
        <div class="full-width full-height chrome acrylic">
            <div class="margin">        
                <h2>Events:</h2>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
            </div>    
        </div>
        <div class="dark full-width full-height chrome acrylic">
            <div class="margin">      
                <h2>Articles:</h2>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
            </div>
        </div>
    </div>
    <div class="text-center accent full-width">
        <h2>Other info</h2>
    </div>
</div>

@code
{
    public MainViewModel ViewModel { get; set; }

    protected override void OnInitialized()
    {
        ViewModel = (ViewProvider.CurrentView as BlazorView<MainViewModel>)?.ViewModel;
        if(ViewModel != null)
        {
            ViewModel.PropertyChanged += ViewModelChanged;
        }
    }

    private void ViewModelChanged(object sender, PropertyChangedEventArgs e)
    {
        StateHasChanged();
    }
}
